name: CI

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }} # runs a test on Ubuntu, Windows and macOS
    strategy:
      matrix:
        deno: ["v1.x"] # , "nightly"]
        os: [macOS-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@c7d7968ad4a59c159a777f79adddad6872ee8d96
        with:
          deno-version: ${{ matrix.deno }} # tests across multiple Deno versions
      - name: Cache Dependencies
        run: make cache
      - name: Run Tests
        run: make test
      - name: Upload lib
        uses: actions/upload-artifact@v2.1.4
        with:
          path: lib
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@c7d7968ad4a59c159a777f79adddad6872ee8d96
        with:
          deno-version: 1.4
      - name: Cache Dependencies
        run: make cache
      - name: Run Linter
        run: make lint
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: typescript
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
  # tag:
  #   runs-on: ubuntu-latest
  #   needs: [test, lint]
  #   if: github.ref == refs/heads/master
  #   steps:
  #     - name: Setup repo
  #       uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false
  #         fetch-depth: 0
  #     - name: Setup Deno
  #       uses: denolib/setup-deno@c7d7968ad4a59c159a777f79adddad6872ee8d96
  #       with:
  #         deno-version: 1.4
  #     - name: Cache Dependencies
  #       run: make cache
  #     - name: Tag
  #       run: make tag
  #     - name: Commit Changes
  #       run: | 
  #         git config --local user.email "action@github.com"
  #         git config --local user.name "GitHub Action"
  #         git add .
  #         git commit -m "docs: new version"
  #     - name: Push changes
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@c7d7968ad4a59c159a777f79adddad6872ee8d96
        with:
          deno-version: 1.4
      - name: Conventional Changelog Action
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
          git-message: 'chore(release): {version}'
          git-user-name: Changelog Action
          git-user-email: changelog@github.actions.com
          preset: angular
          tag-prefix: ''
          version-file: ./project.yaml
          version-path: version
      - name: Generate API Docs
        run: make docs

