name: CI

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' ||
      github.ref == 'refs/heads/master'
    strategy:
      matrix:
        deno: ['v1.x', 'nightly']
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}
      - name: Cache dependencies
        run: make cache
      - name: Run unit tests
        run: make cov
  int-test:
    name: Integration test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' ||
      github.ref == 'refs/heads/master'
    strategy:
      matrix:
        deno: ['v1.x', 'nightly']
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}
      - name: Cache dependencies
        run: make cache
      - name: Run integration tests
        run: make int
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' ||
      github.ref == 'refs/heads/master'
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: 1.4
      - name: Cache dependencies
        run: make cache
      - name: Run linter
        run: make lint
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' ||
      github.ref == 'refs/heads/master'
    steps:
    - name: Setup repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - run: git checkout HEAD^2
      if: github.event_name == 'pull_request'
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: typescript
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
  tag:
    name: Tag
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [unit-test, int-test, lint, analyze]
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Tag repo
        uses: salsify/action-detect-and-tag-new-version@v2
        with:
          version-command: cat version.txt
          tag-template: "{VERSION}"

